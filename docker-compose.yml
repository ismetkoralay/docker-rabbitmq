version: '3'
volumes: 
  datafiles:
    
services:
  database:
    image: mysql:latest
    ports:
      - "3306:3306"
    volumes:
      - datafiles:/var/lib/mysql
      - "./setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: auser
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: CustomerDB
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "25672:25672"
      - "15671:15671"
      - "15672:15672"
      
  customer:
    build:
      context: .
      dockerfile: ./src/Services/Customer/Customer.Api/Dockerfile
    depends_on: 
      - database
      - rabbitmq
    ports:
      - "5000:80"
    restart: always
    environment:
      - DBHOST=database
      - Environment=Development
      - ASPNETCORE_ENVIRONMENT=Development
  
  queue:
    build:
      context: .
      dockerfile: ./src/Services/Queue/Queue.Api/Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "5001:80"
    restart: always
    environment:
      - DBHOST=database
      - Environment=Development
      - ASPNETCORE_ENVIRONMENT=Development
  
  worker:
    build:
      context: .
      dockerfile: ./src/Services/Worker/Worker.Api/Dockerfile
    depends_on:
      - rabbitmq
    ports:
    - "5005:80"
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development